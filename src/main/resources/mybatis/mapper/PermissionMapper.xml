<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylzh.onlineexam.mapper.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.ylzh.onlineexam.entity.Permission">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="permission_id" jdbcType="VARCHAR" property="permissionId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="perms" jdbcType="VARCHAR" property="perms" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, permission_id, name, description, url, perms, parent_id, type, order_num, icon, status, create_time, update_time
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ylzh.onlineexam.entity.Permission">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into permission (<include refid="Base_Column_List" />)
    values (#{id,jdbcType=INTEGER}, #{permissionId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{perms,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{orderNum,jdbcType=INTEGER}, 
      #{icon,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ylzh.onlineexam.entity.Permission">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update permission
    set permission_id = #{permissionId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      perms = #{perms,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select <include refid="Base_Column_List" />
    from permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select <include refid="Base_Column_List" />
    from permission
  </select>

  <select id="selectAllPerms" parameterType="integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>  FROM  permission WHERE status=#{status} ORDER BY order_num
  </select>

  <select id="selectAllMenuName" parameterType="integer" resultMap="BaseResultMap">
    SELECT id, permission_id, `name`, parent_id, `type`  FROM  permission WHERE status=#{status} AND `type` in (0,1) ORDER BY order_num
  </select>

  <select id="findPermsByUserId" resultType="java.lang.String">
    SELECT DISTINCT p.perms FROM permission p LEFT JOIN role_permission rp ON
    p.permission_id = rp.permission_id LEFT JOIN user_role ur on rp.role_id = ur.role_id
    WHERE ur.user_id = #{userId} and p.perms is not null and p.perms!='' and p.status=1
  </select>

  <select id="findByRoleId" parameterType="string" resultMap="BaseResultMap">
    SELECT  a.permission_id,b.name,b.parent_id FROM role_permission a LEFT JOIN permission b on a.permission_id = b.permission_id WHERE a.role_id = #{roleId} and b.status=1
  </select>

  <select id="selectByUserId" parameterType="string" resultMap="BaseResultMap">
    SELECT DISTINCT p.id, p.permission_id, p.name, p.description, p.url, p.perms, p.parent_id FROM permission p
    LEFT JOIN role_permission rp ON p.permission_id = rp.permission_id
    LEFT JOIN user_role ur on rp.role_id = ur.role_id
    WHERE ur.user_id = #{userId} and p.status=1
  </select>

  <select id="selectMenuByUserId" parameterType="string" resultMap="BaseResultMap">
    SELECT DISTINCT p.id, p.permission_id, p.name, p.description, p.url, p.parent_id, p.icon, p.order_num FROM permission p LEFT JOIN role_permission rp ON
    p.permission_id = rp.permission_id
    LEFT JOIN user_role ur on rp.role_id = ur.role_id
    WHERE ur.user_id = #{userId,jdbcType=VARCHAR}
    and p.type in(0,1) and p.status=1
    ORDER BY p.order_num
  </select>

  <update id="updateStatusByPermissionId">
    UPDATE
    permission
    SET
    status=#{status}, update_time=now()
    where
    permission_id = #{permissionId}
  </update>

  <select id="selectByPermissionId" parameterType="string" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM permission
    WHERE permission_id = #{permissionId}
  </select>

  <update id="updateByPermissionId" parameterType="com.exam.model.Permission">
    UPDATE
    permission
    SET
    name=#{name},description=#{description},url=#{url},perms=#{perms}, parent_id=#{parentId}, order_num=#{orderNum}, icon=#{icon}, update_time=now()
    where
    permission_id = #{permissionId}
  </update>

  <select id="selectSubPermsByPermissionId" parameterType="string" resultType="integer">
    SELECT  count(b.id) FROM permission a  LEFT JOIN permission b on a.id = b.parent_id and b.status=1 WHERE a.permission_id = #{permissionId}
  </select>
</mapper>