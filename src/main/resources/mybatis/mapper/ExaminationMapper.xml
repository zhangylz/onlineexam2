<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylzh.onlineexam.mapper.ExaminationMapper">
    <resultMap id="BaseResultMap" type="com.ylzh.onlineexam.entity.Examination" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="author" property="author" jdbcType="VARCHAR" />
        <result column="total_score" property="totalScore" jdbcType="INTEGER" />
        <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <association property="subject" javaType="com.ylzh.onlineexam.entity.Subject" >
        	<result property="id" jdbcType="INTEGER" column="s_subject_id"/>
			<result property="name" jdbcType="VARCHAR" column="s_subject_name"/>
			<result property="description" jdbcType="VARCHAR" column="s_subject_description"/>	
        </association>
        <collection property="questions" column="question_id" javaType="ArrayList" ofType="com.ylzh.onlineexam.entity.Question">
			<result column="question_id" property="id" jdbcType="INTEGER" />
	        <result column="question_title" property="title" jdbcType="VARCHAR" />
	        <result column="question_content" property="content" jdbcType="LONGVARCHAR" />
	        <result column="q_question_type" property="questionType" jdbcType="INTEGER" />
	        <result column="question_option_a" property="optionA" jdbcType="VARCHAR" />
	        <result column="question_option_b" property="optionB" jdbcType="VARCHAR" />
	        <result column="question_option_c" property="optionC" jdbcType="VARCHAR" />
	        <result column="question_option_d" property="optionD" jdbcType="VARCHAR" />
	        <result column="question_option_e" property="optionE" jdbcType="VARCHAR" />
	        <result column="question_option_f" property="optionF" jdbcType="VARCHAR" />
	        <result column="question_answer" property="answer" jdbcType="LONGVARCHAR" />
	        <result column="question_parse" property="parse" jdbcType="LONGVARCHAR" />
	        <result column="question_score" property="score" jdbcType="INTEGER" />
	        <result column="question_difficulty" property="difficulty" jdbcType="INTEGER" />
	        <result column="question_subject_id" property="subjectId" jdbcType="INTEGER" />
	        <result column="question_create_time" property="createTime" jdbcType="TIMESTAMP" />
	        <result column="question_update_time" property="updateTime" jdbcType="TIMESTAMP" />
	        <result column="question_status" property="status" jdbcType="INTEGER" />
		</collection>
    </resultMap>
    
    <sql id="Base_Column_List" >
        id,title,user_id,author,total_score,subject_id,start_time,end_time,create_time,update_time,status
    </sql>
    
    <select id="findByCondition" parameterType="com.ylzh.onlineexam.vo.ExaminationConditionVO" resultMap="BaseResultMap">
    	SELECT
    	a.*,
    	subject.id AS s_subject_id,
    	subject.`name` AS s_subject_name,
    	subject.description AS s_subject_description
    	FROM
    	examination a
    	INNER JOIN subject ON a.subject_id = subject.id
    	INNER JOIN exam_question eq ON a.id = eq.exam_id
    	WHERE 1 = 1
    	<if test="subjectId != null">
    		AND a.subject_id = #{subjectId}
    	</if>
    	<choose>
    		<when test="questionIds != null">
    			AND eq.question_id IN (
    			<foreach collection="questionIds" item="questionId" separator=",">
    				#{questionId}
    			</foreach>
    			)
    		</when>
    		<otherwise>
    			<if test="questionId != null">
    				AND eq.question_id = #{questionId}
    			</if>
    		</otherwise>
    	</choose>
    	<if test="status != null">
			AND	a.status = #{status}
		</if>
		<if test="keywords != null and keywords != '' ">
			AND
			(
			a.title LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') OR
			a.content LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') OR
			a.keywords LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%')
			)
		</if>
    </select>
</mapper>