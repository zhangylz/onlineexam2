<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylzh.onlineexam.mapper.ExaminationMapper">
  <resultMap id="BaseResultMap" type="com.ylzh.onlineexam.entity.Examination">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.ylzh.onlineexam.entity.Examination">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association property="subject" javaType="com.ylzh.onlineexam.entity.Subject" >
      <result property="id" jdbcType="INTEGER" column="s_subject_id"/>
      <result property="name" jdbcType="VARCHAR" column="s_subject_name"/>
      <result property="description" jdbcType="VARCHAR" column="s_subject_description"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
        id,title,user_id,author,total_score,subject_id,start_time,end_time,create_time,update_time,status
    </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from examination
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ylzh.onlineexam.entity.Examination">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into examination (<include refid="Base_Column_List"/>)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{totalScore,jdbcType=INTEGER}, #{subjectId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ylzh.onlineexam.entity.Examination">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      total_score = #{totalScore,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select <include refid="Base_Column_List"/>
    from examination
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select <include refid="Base_Column_List"/>
    from examination
  </select>

  <select id="findByCondition" parameterType="com.ylzh.onlineexam.vo.ExaminationConditionVO" resultMap="BaseResultMap2">
    SELECT
    a.*,
    subject.id AS s_subject_id,
    subject.`name` AS s_subject_name,
    subject.description AS s_subject_description
    FROM
    examination a
    INNER JOIN subject ON a.subject_id = subject.id
    INNER JOIN exam_question eq ON a.id = eq.exam_id
    WHERE 1 = 1
    <if test="subjectId != null">
      AND a.subject_id = #{subjectId}
    </if>
    <choose>
      <when test="questionIds != null">
        AND eq.question_id IN (
        <foreach collection="questionIds" item="questionId" separator=",">
          #{questionId}
        </foreach>
        )
      </when>
      <otherwise>
        <if test="questionId != null">
          AND eq.question_id = #{questionId}
        </if>
      </otherwise>
    </choose>
    <if test="status != null">
      AND	a.status = #{status}
    </if>
    <if test="keywords != null and keywords != '' ">
      AND
      (
      a.title LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') OR
      a.content LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') OR
      a.keywords LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%')
      )
    </if>
  </select>

  <select id="listQuestionsByExamId" parameterMap="java.util.ArrayList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from examination where id in
    <foreach collection="array" item="id" index="index" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
</mapper>