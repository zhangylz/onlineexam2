<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylzh.onlineexam.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.ylzh.onlineexam.entity.Question">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="question_type" jdbcType="INTEGER" property="questionType" />
    <result column="option_a" jdbcType="VARCHAR" property="optionA" />
    <result column="option_b" jdbcType="VARCHAR" property="optionB" />
    <result column="option_c" jdbcType="VARCHAR" property="optionC" />
    <result column="option_d" jdbcType="VARCHAR" property="optionD" />
    <result column="option_e" jdbcType="VARCHAR" property="optionE" />
    <result column="option_f" jdbcType="VARCHAR" property="optionF" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="answer" jdbcType="LONGVARCHAR" property="answer" />
    <result column="parse" jdbcType="LONGVARCHAR" property="parse" />
  </resultMap>
  <sql id="Base_Column_List" >
        id,title,content,question_type,option_a,option_b,option_c,option_d,option_e,option_f,
        answer,parse,score,difficulty,subject_id,exam_id,create_time,update_time,status
    </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ylzh.onlineexam.entity.Question">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into question (<include refid="Base_Column_List" />)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{questionType,jdbcType=INTEGER}, 
      #{optionA,jdbcType=VARCHAR}, #{optionB,jdbcType=VARCHAR}, #{optionC,jdbcType=VARCHAR}, 
      #{optionD,jdbcType=VARCHAR}, #{optionE,jdbcType=VARCHAR}, #{optionF,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{difficulty,jdbcType=INTEGER}, #{subjectId,jdbcType=INTEGER}, 
      #{examId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}, #{answer,jdbcType=LONGVARCHAR}, 
      #{parse,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ylzh.onlineexam.entity.Question">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update question
    set title = #{title,jdbcType=VARCHAR},
      question_type = #{questionType,jdbcType=INTEGER},
      option_a = #{optionA,jdbcType=VARCHAR},
      option_b = #{optionB,jdbcType=VARCHAR},
      option_c = #{optionC,jdbcType=VARCHAR},
      option_d = #{optionD,jdbcType=VARCHAR},
      option_e = #{optionE,jdbcType=VARCHAR},
      option_f = #{optionF,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      difficulty = #{difficulty,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      exam_id = #{examId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      answer = #{answer,jdbcType=LONGVARCHAR},
      parse = #{parse,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select <include refid="Base_Column_List" />
    from question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select <include refid="Base_Column_List" />
    from question
  </select>

  <select id="findByCondition" parameterType="com.ylzh.onlineexam.vo.QuestionConditionVO" resultMap="BaseResultMap">
    SELECT
    a.*,
    subject.id AS s_subject_id,
    subject.`name` AS s_subject_name,
    subject.description AS s_subject_description
    FROM
    question a
    INNER JOIN subject ON a.subject_id = subject.id
    WHERE 1 = 1
    <if test="subjectId != null">
      AND a.subject_id = #{subjectId}
    </if>
    <if test="questionType != null">
      AND a.question_type = #{questionType}
    </if>
    <if test="status != null">
      AND a.status = #{status}
    </if>
    <if test="keywords != null and keywords != ''">
      AND
      a.title LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%')
    </if>
    GROUP BY a.id
  </select>

  <select id="selectById" parameterType="int" resultMap="BaseResultMap">
    	SELECT
    	a.*,
    	subject.id AS s_subject_id,
    	subject.`name` AS s_subject_name,
    	subject.description AS s_subject_description
    	FROM
    	question a
    	INNER JOIN subject ON a.subject_id = subject.id
    	WHERE
    	a.id = #{id}
    </select>

  <delete id="deleteBatch" parameterType="map">
    DELETE FROM
    question
    WHERE
    id in
    <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>